[
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 36559563852,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario()"
            }
          }
        ],
        "line": 23,
        "name": "Verifying login details with invalid credentials",
        "description": "",
        "id": "verifying-adactin-details;verifying-login-details-with-invalid-credentials;;2",
        "after": [
          {
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "images/png"
              }
            ],
            "result": {
              "duration": 396909696,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.afterScenario(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 403824,
              "status": "passed"
            },
            "line": 5,
            "name": "User is on adactin page",
            "match": {
              "location": "AdactinPageBase.user_is_on_adactin_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#username\"}\n  (Session info: chrome\u003d80.0.3987.132)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027HP-PC\u0027, ip: \u0027192.168.0.141\u0027, os.name: \u0027Windows 7\u0027, os.arch: \u0027amd64\u0027, os.version: \u00276.1\u0027, java.version: \u00271.8.0_231\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.132, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\\Users\\new\\AppData\\Local\\...}, goog:chromeOptions: {debuggerAddress: localhost:54230}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}\nSession ID: 77f981d8c1bcee488220a2c6807043bb\n*** Element info: {Using\u003did, value\u003dusername}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Unknown Source)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:188)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy17.sendKeys(Unknown Source)\r\n\tat com.base.BaseClass.type(BaseClass.java:40)\r\n\tat com.stepdefinition1.AdactinPageBase.user_enters_and(AdactinPageBase.java:33)\r\n\tat ✽.User enters \"varunvarun\" and \"9600183978\"(src/test/resources/feature/LoginPage.feature:6)\r\n",
              "duration": 303037294,
              "status": "failed"
            },
            "line": 6,
            "name": "User enters \"varunvarun\" and \"9600183978\"",
            "match": {
              "arguments": [
                {
                  "val": "\"varunvarun\"",
                  "offset": 12
                },
                {
                  "val": "\"9600183978\"",
                  "offset": 29
                }
              ],
              "location": "AdactinPageBase.user_enters_and(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 35698,
              "status": "skipped"
            },
            "line": 7,
            "name": "User should click the login button",
            "match": {
              "location": "AdactinPageBase.user_should_click_the_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20972,
              "status": "skipped"
            },
            "line": 8,
            "name": "User should select the  \"Paris\",\"Hotel Cornice\",\"Deluxe\",\"4-Four\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Paris\"",
                  "offset": 24
                },
                {
                  "val": "\"Hotel Cornice\"",
                  "offset": 32
                },
                {
                  "val": "\"Deluxe\"",
                  "offset": 48
                },
                {
                  "val": "\"4-Four\"",
                  "offset": 57
                }
              ],
              "location": "AdactinPageBase.user_should_select_the(String,String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18741,
              "status": "skipped"
            },
            "line": 10,
            "name": "User should enter the check in   \"27/02/2020\",\"01/03/2020\"",
            "match": {
              "arguments": [
                {
                  "val": "\"27/02/2020\"",
                  "offset": 33
                },
                {
                  "val": "\"01/03/2020\"",
                  "offset": 46
                }
              ],
              "location": "AdactinPageBase.user_should_enter_the_check_in(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18295,
              "status": "skipped"
            },
            "line": 11,
            "name": "User should select the room  \"4-Four\", \"2-Two\"",
            "match": {
              "arguments": [
                {
                  "val": "\"4-Four\"",
                  "offset": 29
                },
                {
                  "val": "\"2-Two\"",
                  "offset": 39
                }
              ],
              "location": "AdactinPageBase.user_should_select_the_room(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20526,
              "status": "skipped"
            },
            "line": 12,
            "name": "User should click the search",
            "match": {
              "location": "AdactinPageBase.user_should_click_the_search()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18741,
              "status": "skipped"
            },
            "line": 13,
            "name": "User should select the hotel name",
            "match": {
              "location": "AdactinPageBase.user_should_select_the_hotel_name()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18294,
              "status": "skipped"
            },
            "line": 14,
            "name": "User should click continue",
            "match": {
              "location": "AdactinPageBase.user_should_click_continue()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18294,
              "status": "skipped"
            },
            "line": 15,
            "name": "User should enter the name  \"varunvarun\",\"sathishvarun\",\"omr\",\"9876543212341234\"",
            "match": {
              "arguments": [
                {
                  "val": "\"varunvarun\"",
                  "offset": 28
                },
                {
                  "val": "\"sathishvarun\"",
                  "offset": 41
                },
                {
                  "val": "\"omr\"",
                  "offset": 56
                },
                {
                  "val": "\"9876543212341234\"",
                  "offset": 62
                }
              ],
              "location": "AdactinPageBase.user_should_enter_the_name(String,String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18295,
              "status": "skipped"
            },
            "line": 16,
            "name": "User should select the cc \"VISA\",\"July\",\"2021\"",
            "match": {
              "arguments": [
                {
                  "val": "\"VISA\"",
                  "offset": 26
                },
                {
                  "val": "\"July\"",
                  "offset": 33
                },
                {
                  "val": "\"2021\"",
                  "offset": 40
                }
              ],
              "location": "AdactinPageBase.user_should_select_the_cc(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17849,
              "status": "skipped"
            },
            "line": 17,
            "name": "User should enter the ccv \"432\"",
            "match": {
              "arguments": [
                {
                  "val": "\"432\"",
                  "offset": 26
                }
              ],
              "location": "AdactinPageBase.user_should_enter_the_ccv(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17848,
              "status": "skipped"
            },
            "line": 18,
            "name": "User should click the book buton",
            "match": {
              "location": "AdactinPageBase.user_should_click_the_book_buton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17848,
              "status": "skipped"
            },
            "line": 19,
            "name": "User should generate the order id",
            "match": {
              "location": "AdactinPageBase.user_should_generate_the_order_id()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Func2"
          },
          {
            "name": "@Info1"
          },
          {
            "name": "@Reg"
          }
        ]
      }
    ],
    "name": "Verifying adactin details",
    "description": "",
    "id": "verifying-adactin-details",
    "keyword": "Feature",
    "uri": "src/test/resources/feature/LoginPage.feature",
    "tags": [
      {
        "name": "@Func2",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@Info1",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 8
        }
      }
    ]
  },
  {
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 20085343009,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.beforeScenario()"
            }
          }
        ],
        "line": 23,
        "name": "Verifying login details with invalid credentials",
        "description": "",
        "id": "verifying-adactin-details;verifying-login-details-with-invalid-credentials;;2",
        "after": [
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "images/png"
              }
            ],
            "result": {
              "duration": 396795019,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.afterScenario(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 145019,
              "status": "passed"
            },
            "line": 5,
            "name": "User is on adactin page",
            "match": {
              "location": "AdactinPageBase.user_is_on_adactin_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\"#username\"}\n  (Session info: chrome\u003d80.0.3987.132)\nFor documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.141.59\u0027, revision: \u0027e82be7d358\u0027, time: \u00272018-11-14T08:17:03\u0027\nSystem info: host: \u0027HP-PC\u0027, ip: \u0027192.168.0.141\u0027, os.name: \u0027Windows 7\u0027, os.arch: \u0027amd64\u0027, os.version: \u00276.1\u0027, java.version: \u00271.8.0_231\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 80.0.3987.132, chrome: {chromedriverVersion: 80.0.3987.106 (f68069574609..., userDataDir: C:\\Users\\new\\AppData\\Local\\...}, goog:chromeOptions: {debuggerAddress: localhost:54257}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}\nSession ID: e34d20aefb29e6b1c2d67e4b74435d3e\n*** Element info: {Using\u003did, value\u003dusername}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\r\n\tat java.lang.reflect.Constructor.newInstance(Unknown Source)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:372)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:188)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy17.sendKeys(Unknown Source)\r\n\tat com.base.BaseClass.type(BaseClass.java:40)\r\n\tat com.stepdefinition1.AdactinPageBase.user_enters_and(AdactinPageBase.java:33)\r\n\tat ✽.User enters \"varunvarun\" and \"9600183978\"(src/test/resources/feature/LoginPage2.feature:6)\r\n",
              "duration": 47497316,
              "status": "failed"
            },
            "line": 6,
            "name": "User enters \"varunvarun\" and \"9600183978\"",
            "match": {
              "arguments": [
                {
                  "val": "\"varunvarun\"",
                  "offset": 12
                },
                {
                  "val": "\"9600183978\"",
                  "offset": 29
                }
              ],
              "location": "AdactinPageBase.user_enters_and(String,String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10709,
              "status": "skipped"
            },
            "line": 7,
            "name": "User should click the login button",
            "match": {
              "location": "AdactinPageBase.user_should_click_the_login_button()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8478,
              "status": "skipped"
            },
            "line": 8,
            "name": "User should select the  \"Paris\",\"Hotel Cornice\",\"Deluxe\",\"4-Four\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Paris\"",
                  "offset": 24
                },
                {
                  "val": "\"Hotel Cornice\"",
                  "offset": 32
                },
                {
                  "val": "\"Deluxe\"",
                  "offset": 48
                },
                {
                  "val": "\"4-Four\"",
                  "offset": 57
                }
              ],
              "location": "AdactinPageBase.user_should_select_the(String,String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11602,
              "status": "skipped"
            },
            "line": 10,
            "name": "User should enter the check in   \"27/02/2020\",\"01/03/2020\"",
            "match": {
              "arguments": [
                {
                  "val": "\"27/02/2020\"",
                  "offset": 33
                },
                {
                  "val": "\"01/03/2020\"",
                  "offset": 46
                }
              ],
              "location": "AdactinPageBase.user_should_enter_the_check_in(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9816,
              "status": "skipped"
            },
            "line": 11,
            "name": "User should select the room  \"4-Four\", \"2-Two\"",
            "match": {
              "arguments": [
                {
                  "val": "\"4-Four\"",
                  "offset": 29
                },
                {
                  "val": "\"2-Two\"",
                  "offset": 39
                }
              ],
              "location": "AdactinPageBase.user_should_select_the_room(String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7586,
              "status": "skipped"
            },
            "line": 12,
            "name": "User should click the search",
            "match": {
              "location": "AdactinPageBase.user_should_click_the_search()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10709,
              "status": "skipped"
            },
            "line": 13,
            "name": "User should select the hotel name",
            "match": {
              "location": "AdactinPageBase.user_should_select_the_hotel_name()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8924,
              "status": "skipped"
            },
            "line": 14,
            "name": "User should click continue",
            "match": {
              "location": "AdactinPageBase.user_should_click_continue()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8924,
              "status": "skipped"
            },
            "line": 15,
            "name": "User should enter the name  \"varunvarun\",\"sathishvarun\",\"omr\",\"9876543212341234\"",
            "match": {
              "arguments": [
                {
                  "val": "\"varunvarun\"",
                  "offset": 28
                },
                {
                  "val": "\"sathishvarun\"",
                  "offset": 41
                },
                {
                  "val": "\"omr\"",
                  "offset": 56
                },
                {
                  "val": "\"9876543212341234\"",
                  "offset": 62
                }
              ],
              "location": "AdactinPageBase.user_should_enter_the_name(String,String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7140,
              "status": "skipped"
            },
            "line": 16,
            "name": "User should select the cc \"VISA\",\"July\",\"2021\"",
            "match": {
              "arguments": [
                {
                  "val": "\"VISA\"",
                  "offset": 26
                },
                {
                  "val": "\"July\"",
                  "offset": 33
                },
                {
                  "val": "\"2021\"",
                  "offset": 40
                }
              ],
              "location": "AdactinPageBase.user_should_select_the_cc(String,String,String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8478,
              "status": "skipped"
            },
            "line": 17,
            "name": "User should enter the ccv \"432\"",
            "match": {
              "arguments": [
                {
                  "val": "\"432\"",
                  "offset": 26
                }
              ],
              "location": "AdactinPageBase.user_should_enter_the_ccv(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11156,
              "status": "skipped"
            },
            "line": 18,
            "name": "User should click the book buton",
            "match": {
              "location": "AdactinPageBase.user_should_click_the_book_buton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8479,
              "status": "skipped"
            },
            "line": 19,
            "name": "User should generate the order id",
            "match": {
              "location": "AdactinPageBase.user_should_generate_the_order_id()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Func1"
          },
          {
            "name": "@Smoke"
          }
        ]
      }
    ],
    "name": "Verifying adactin details",
    "description": "",
    "id": "verifying-adactin-details",
    "keyword": "Feature",
    "uri": "src/test/resources/feature/LoginPage2.feature",
    "tags": [
      {
        "name": "@Func1",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]